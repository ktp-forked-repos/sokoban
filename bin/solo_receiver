#!/usr/bin/env ruby
require 'openssl'
require 'digest/sha1'
require 'base64'
require 'cgi'

BUCKET = ENV["SOKOBAN_BUCKET"] || abort("need SOKOBAN_BUCKET env var")
AWS_ACCESS_KEY = ENV["AWS_ACCESS_KEY"] || abort("need AWS_ACCESS_KEY env var")
AWS_SECRET_KEY = ENV["AWS_SECRET_KEY"] || abort("need AWS_SECRET_KEY env var")

def signed_url(path, ttl, method = "GET")
  expires = Time.now.to_i + ttl.to_i
  string_to_sign = "#{method}\n\n\n#{expires}\n/#{BUCKET}/#{path}"
  digest = OpenSSL::Digest::Digest.new("sha1")
  hmac = OpenSSL::HMAC.digest(digest, AWS_SECRET_KEY, string_to_sign)
  b64_hmac = [hmac].pack("m").strip
  signature = CGI.escape(b64_hmac)
  host_and_bucket = "#{BUCKET}.s3.amazonaws.com"
  "http://#{host_and_bucket}/#{path}?AWSAccessKeyId=#{AWS_ACCESS_KEY}" +
    "&Signature=#{signature}&Expires=#{expires}"
end

abort "USAGE: $0 APP_NAME BUILDPACK_URL" if(ARGV.size != 2)

app_name, buildpack_url = ARGV

compile_id = rand(2**64).to_s(36) # poor man's UUID
ttl = 60*60

repo_url = signed_url("repos/#{app_name}.bundle", ttl, "GET")
repo_put_url = signed_url("repos/#{app_name}.bundle", ttl, "PUT")

slug_url = signed_url("slugs/#{compile_id}", ttl, "GET")
slug_put_url = signed_url("slugs/#{compile_id}", ttl, "PUT")

user = `heroku auth:whoami`.strip
token = `heroku auth:token`.strip

args = [repo_url, user, token, app_name, buildpack_url,
        slug_put_url, slug_url, repo_put_url]

puts "bundle exec ruby -I:lib bin/sokoban receive " +
  args.map{|s| "'#{s}'"}.join(" ")
